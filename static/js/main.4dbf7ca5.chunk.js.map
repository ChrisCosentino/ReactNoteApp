{"version":3,"sources":["sidebar/styles.js","sidebaritem/styles.js","sidebaritem/sidebaritem.js","helpers.js","sidebar/sidebar.js","editor/styles.js","editor/editor.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","backgroundColor","palette","background","paper","height","position","left","width","boxShadow","newChatBtn","borderRadius","unreadMessage","color","top","right","newNoteBtn","borderBottom","sidebarContainer","marginTop","boxSizing","float","overflowY","overflowX","newNoteInput","margin","outline","border","paddingLeft","newNoteSubmitBtn","listItem","cursor","textSection","maxWidth","deleteIcon","SidebarItemComponent","selectNote","n","i","props","deleteNote","note","window","confirm","title","str","this","_index","_note","classes","selectedNoteIndex","key","ListItem","className","selected","alignItems","onClick","ListItemText","primary","secondary","body","substring","replace","Component","withStyles","SideBarComponent","newNoteBtnClick","setState","addingNote","state","updateTitle","txt","newNote","notes","Button","type","placeholder","onKeyUp","e","target","value","List","map","Divider","titleInput","padding","fontSize","editIcon","editorContainer","EditorComponent","componentDidMount","text","selectedNote","id","componentDidUpdate","updateBody","val","a","async","update","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","noteUpdate","onChange","firebase","require","App","firestore","collection","onSnapshot","serverUpdate","docs","_doc","data","console","log","index","noteObj","doc","timestamp","FieldValue","serverTimestamp","add","newFromDB","newID","newNoteIndex","indexOf","filter","noteIndex","length","delete","React","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0QAyDiBA,EAzDF,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,OAAQ,oBACRC,SAAU,WACVC,KAAM,IACNC,MAAO,QACPC,UAAW,qBAEbC,WAAY,CACVC,aAAc,OAEhBC,cAAe,CACbC,MAAO,MACPP,SAAU,WACVQ,IAAK,IACLC,MAAO,OAETC,WAAY,CACVR,MAAO,OACPH,OAAQ,OACRY,aAAc,kBACdN,aAAc,MACdV,gBAAiB,UACjBY,MAAO,QACP,UAAW,CACTZ,gBAAiB,YAGrBiB,iBAAkB,CAChBC,UAAW,MACXX,MAAO,QACPH,OAAQ,OACRe,UAAW,aACXC,MAAO,OACPC,UAAW,SACXC,UAAW,UAEbC,aAAc,CACZhB,MAAO,OACPiB,OAAQ,MACRpB,OAAQ,OACRqB,QAAS,OACTC,OAAQ,OACRC,YAAa,MACb,UAAW,CACTF,QAAS,oCAGbG,iBAAkB,CAChBrB,MAAO,OACPP,gBAAiB,UACjBU,aAAc,MACdE,MAAO,W,2BCpCIf,EAjBF,SAAAC,GAAK,MAAK,CACrB+B,SAAU,CACRC,OAAQ,WAEVC,YAAa,CACXC,SAAU,OAEZC,WAAY,CACV5B,SAAU,WACVS,MAAO,MACPD,IAAK,mBACL,UAAW,CACTD,MAAO,U,uCCHTsB,E,2MAuBFC,WAAa,SAACC,EAAGC,GAAJ,OAAU,EAAKC,MAAMH,WAAWC,EAAGC,I,EAEhDE,WAAa,SAACC,GACPC,OAAOC,QAAP,2CAAmDF,EAAKG,SACvD,EAAKL,MAAMC,WAAWC,I,wEAzBrB,ICCqBI,EDDtB,SAEgDC,KAAKP,MAAlDQ,EAFH,EAEGA,OAAQC,EAFX,EAEWA,MAAOC,EAFlB,EAEkBA,QAASC,EAF3B,EAE2BA,kBAE/B,OACI,yBAAKC,IAAKJ,GACN,kBAACK,EAAA,EAAD,CAAUC,UAAWJ,EAAQG,SAC7BE,SAAUJ,IAAsBH,EAChCQ,WAAW,cACP,yBAAKF,UAAWJ,EAAQjB,YACxBwB,QAAS,kBAAM,EAAKpB,WAAWY,EAAOD,KAClC,kBAACU,EAAA,EAAD,CACAC,QAASV,EAAMJ,MACfe,WCZUd,EDYgBG,EAAMY,KAAKC,UAAU,EAAG,ICX/DhB,EAAIiB,QAAQ,aAAc,IDW4C,UAE7D,kBAAC,IAAD,CAAYN,QAAS,kBAAK,EAAKhB,WAAWQ,IAC1CK,UAAWJ,EAAQf,mB,GAlBJ6B,aAiCpBC,cAAWlE,EAAXkE,CAAmB7B,GEnC5B8B,E,YACF,aAAc,IAAD,8BACT,+CA4DJC,gBAAkB,WACd,EAAKC,SAAS,CAAEvB,MAAO,KAAMwB,YAAa,EAAKC,MAAMD,cA9D5C,EAiEbE,YAAc,SAACC,GACX,EAAKJ,SAAS,CAAEvB,MAAO2B,KAlEd,EAqEbC,QAAU,WACP,EAAKjC,MAAMiC,QAAQ,EAAKH,MAAMzB,OAC9B,EAAKuB,SAAS,CAAEvB,MAAO,KAAMwB,YAAY,KAvE/B,EA0EbhC,WAAa,SAACC,EAAGC,GAAJ,OAAU,EAAKC,MAAMH,WAAWC,EAAGC,IA1EnC,EA4EbE,WAAa,SAACC,GAAD,OAAU,EAAKF,MAAMC,WAAWC,IAzEzC,EAAK4B,MAAO,CACRD,YAAY,EACZxB,MAAO,MALF,E,sEASJ,IAAD,SAEwCE,KAAKP,MAA1CkC,EAFH,EAEGA,MAAOxB,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,kBAEvB,OAAGuB,EAEK,yBAAKpB,UAAWJ,EAAQ/B,kBACpB,kBAACwD,EAAA,EAAD,CACAlB,QAASV,KAAKoB,gBACdb,UAAWJ,EAAQjC,YAAa8B,KAAKuB,MAAMD,WAAa,SAAW,YAE/DtB,KAAKuB,MAAMD,WACX,6BACE,2BAAOO,KAAK,OACVtB,UAAWJ,EAAQzB,aACnBoD,YAAY,mBACZC,QAAS,SAACC,GAAD,OAAO,EAAKR,YAAYQ,EAAEC,OAAOC,UAE5C,kBAACN,EAAA,EAAD,CACErB,UAAWJ,EAAQpB,iBACnB2B,QAASV,KAAK0B,SAFhB,gBAIF,KAGJ,kBAACS,EAAA,EAAD,KAEQR,EAAMS,KAAI,SAAClC,EAAOD,GACd,OACI,yBAAKI,IAAKJ,GACN,kBAAC,EAAD,CACAC,MAAOA,EACPD,OAAQA,EACRG,kBAAmBA,EACnBd,WAAY,EAAKA,WACjBI,WAAY,EAAKA,aAEjB,kBAAC2C,EAAA,EAAD,YAUxB,kC,GAzDepB,aAgFhBC,cAAWlE,EAAXkE,CAAmBC,G,kCCrDjBnE,EAlCF,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,OAAQ,oBACRC,SAAU,WACVC,KAAM,IACNC,MAAO,QACPC,UAAW,qBAEb2E,WAAY,CACV/E,OAAQ,OACRe,UAAW,aACXO,OAAQ,OACR0D,QAAS,MACTC,SAAU,OACV9E,MAAO,qBACPP,gBAAiB,UACjBY,MAAO,QACPe,YAAa,QAEf2D,SAAU,CACRjF,SAAU,WACVC,KAAM,QACNO,IAAK,OACLD,MAAO,QACPL,MAAO,KACPH,OAAQ,MAEVmF,gBAAiB,CACfnF,OAAQ,OACRe,UAAW,gBCvBXqE,E,YACF,aAAc,IAAD,8BACT,+CASJC,kBAAoB,WAChB,EAAKvB,SAAS,CACVwB,KAAM,EAAKpD,MAAMqD,aAAahC,KAC9BhB,MAAO,EAAKL,MAAMqD,aAAahD,MAC/BiD,GAAI,EAAKtD,MAAMqD,aAAaC,MAdvB,EAkBbC,mBAAqB,WACd,EAAKvD,MAAMqD,aAAaC,KAAO,EAAKxB,MAAMwB,IACzC,EAAK1B,SAAS,CACVwB,KAAM,EAAKpD,MAAMqD,aAAahC,KAC9BhB,MAAO,EAAKL,MAAMqD,aAAahD,MAC/BiD,GAAI,EAAKtD,MAAMqD,aAAaC,MAvB3B,EA+CbE,WAAa,SAAOC,GAAP,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACH,EAAK9B,SAAS,CAAEwB,KAAKK,KADlB,OAET,EAAKG,SAFI,sCA/CA,EAoDb7B,YAAc,SAAOC,GAAP,SAAA0B,EAAAC,OAAA,kEAAAD,EAAA,MACJ,EAAK9B,SAAS,CAAEvB,MAAO2B,KADnB,OAEV,EAAK4B,SAFK,sCApDD,EA0DbA,OHlEW,SAAkBF,EAAEG,EAAEC,GACjC,IAAIC,EAAExB,EACN,OAAO,WACL,SAASyB,IACPD,EAAE,KACFD,IAAIvB,EAAEmB,EAAEO,MAAMC,EAAEC,IAElB,IAAID,EAAE3D,KAAK4D,EAAEC,UACb,OAAQC,aAAaN,GAAGA,EAAEO,WAAWN,EAAEH,GAAGC,IAAIC,IAAIxB,EAAEmB,EAAEO,MAAMC,EAAEC,IAAI5B,GG0D3DgC,EAAS,WACd,EAAKvE,MAAMwE,WAAW,EAAK1C,MAAMwB,GAAI,CACjCjD,MAAO,EAAKyB,MAAMzB,MAClBgB,KAAM,EAAKS,MAAMsB,SAEtB,MA5DC,EAAKtB,MAAQ,CACTsB,KAAM,GACN/C,MAAO,GACPiD,GAAI,IANC,E,sEA4BJ,IAAD,OAEI5C,EAAYH,KAAKP,MAAjBU,QAGR,OACI,yBAAKI,UAAWJ,EAAQuC,iBACpB,kBAAC,IAAD,CAAiBnC,UAAWJ,EAAQsC,WACpC,2BAAOlC,UAAWJ,EAAQmC,WAC1BR,YAAY,iBACZI,MAAOlC,KAAKuB,MAAMzB,MAAQE,KAAKuB,MAAMzB,MAAQ,GAC7CoE,SAAU,SAAClC,GAAD,OAAO,EAAKR,YAAYQ,EAAEC,OAAOC,UAC3C,kBAAC,IAAD,CACAA,MAAOlC,KAAKuB,MAAMsB,KAClBqB,SAAUlE,KAAKiD,kB,GA3CDhC,aAmEfC,cAAWlE,EAAXkE,CAAmByB,GCrE5BwB,G,OAAWC,EAAQ,KAkGVC,E,YA9Fb,aAAe,IAAD,8BACZ,+CA6BFzB,kBAAoB,WAClBuB,EACGG,YACAC,WAAW,SACXC,YAAW,SAAAC,GACV,IAAM9C,EAAQ8C,EAAaC,KAAKtC,KAAI,SAAAuC,GAClC,IAAMC,EAAOD,EAAKC,OAElB,OADAA,EAAI,GAASD,EAAK5B,GACX6B,KAETC,QAAQC,IAAInD,GACZ,EAAKN,SAAS,CAAEM,MAAOA,QAzCf,EA6CdrC,WAAa,SAACK,EAAMoF,GAAP,OAAiB,EAAK1D,SAAS,CAAEjB,kBAAmB2E,EAAOjC,aAAcnD,KA7CxE,EA8CdsE,WAAa,SAAClB,EAAIiC,GAChBb,EACGG,YACAC,WAAW,SACXU,IAAIlC,GACJM,OAAO,CACNvD,MAAOkF,EAAQlF,MACfgB,KAAMkE,EAAQlE,KACdoE,UAAWf,EAASG,UAAUa,WAAWC,qBAtDjC,EAyDd1D,QAAU,SAAO5B,GAAP,qBAAAqD,EAAAC,OAAA,uDACFzD,EAAO,CACXG,MAAOA,EACPgB,KAAM,IAHA,WAAAqC,EAAA,MAKgBgB,EACrBG,YACAC,WAAW,SACXc,IAAI,CACHvF,MAAOH,EAAKG,MACZgB,KAAMnB,EAAKmB,KACXoE,UAAWf,EAASG,UAAUa,WAAWC,qBAXrC,cAKFE,EALE,OAaFC,EAAQD,EAAUvC,GAbhB,WAAAI,EAAA,MAcF,EAAK9B,SAAS,CAAEM,MAAM,GAAD,mBAAM,EAAKJ,MAAMI,OAAjB,CAAwBhC,OAd3C,OAeF6F,EAAe,EAAKjE,MAAMI,MAAM8D,QAAQ,EAAKlE,MAAMI,MAAM+D,QAAO,SAAAxF,GAAK,OAAIA,EAAM6C,KAAOwC,KAAO,IACnG,EAAKlE,SAAS,CAAEyB,aAAc,EAAKvB,MAAMI,MAAM6D,GAAepF,kBAAmBoF,IAhBzE,sCAzDI,EA2Ed9F,WAAa,SAAOC,GAAP,eAAAwD,EAAAC,OAAA,uDACLuC,EAAY,EAAKpE,MAAMI,MAAM8D,QAAQ9F,GADhC,WAAAwD,EAAA,MAEL,EAAK9B,SAAS,CAAEM,MAAO,EAAKJ,MAAMI,MAAM+D,QAAO,SAAAxF,GAAK,OAAIA,IAAUP,QAF7D,OAGR,EAAK4B,MAAMnB,oBAAsBuF,EAClC,EAAKtE,SAAS,CAAEjB,kBAAmB,KAAM0C,aAAc,OAEvD,EAAKvB,MAAMI,MAAMiE,OAAS,EAC1B,EAAKtG,WAAW,EAAKiC,MAAMI,MAAM,EAAKJ,MAAMnB,kBAAoB,GAAI,EAAKmB,MAAMnB,kBAAoB,GACnG,EAAKiB,SAAS,CAAEjB,kBAAmB,KAAM0C,aAAc,OAGzDqB,EACGG,YACAC,WAAW,SACXU,IAAItF,EAAKoD,IACT8C,SAfQ,sCAzEX,EAAKtE,MAAQ,CACXnB,kBAAmB,KACnB0C,aAAc,KACdnB,MAAO,MALG,E,sEAUZ,OACE,yBAAKpB,UAAU,iBACb,kBAAC,EAAD,CACEH,kBAAmBJ,KAAKuB,MAAMnB,kBAC9BuB,MAAO3B,KAAKuB,MAAMI,MAClBjC,WAAYM,KAAKN,WACjBJ,WAAYU,KAAKV,WACjBoC,QAAS1B,KAAK0B,UAEd1B,KAAKuB,MAAMuB,aACX,kBAAC,EAAD,CAAiBA,aAAc9C,KAAKuB,MAAMuB,aAC1C1C,kBAAmBJ,KAAKuB,MAAMnB,kBAC9BuB,MAAO3B,KAAKuB,MAAMI,MAClBsC,WAAYjE,KAAKiE,aACjB,U,GA1BQ6B,IAAM7E,WCKJ8E,QACW,cAA7BnG,OAAOoG,SAASC,UAEe,UAA7BrG,OAAOoG,SAASC,UAEhBrG,OAAOoG,SAASC,SAASC,MACvB,2DCZN,IAAM/B,EAAWC,EAAQ,IACzBA,EAAQ,KAcND,EAASgC,cAXU,CACjBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBxC,EAASyC,YAEXC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,uBD2G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.4dbf7ca5.chunk.js","sourcesContent":["const styles = theme => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      height: 'calc(100% - 35px)',\n      position: 'absolute',\n      left: '0',\n      width: '300px',\n      boxShadow: '0px 0px 2px black'\n    },\n    newChatBtn: {\n      borderRadius: '0px'\n    },\n    unreadMessage: {\n      color: 'red',\n      position: 'absolute',\n      top: '0',\n      right: '5px'\n    },\n    newNoteBtn: {\n      width: '100%',\n      height: '35px',\n      borderBottom: '1px solid black',\n      borderRadius: '0px',\n      backgroundColor: '#29487d',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: '#88a2ce'\n      }\n    },\n    sidebarContainer: {\n      marginTop: '0px',\n      width: '300px',\n      height: '100%',\n      boxSizing: 'border-box',\n      float: 'left',\n      overflowY: 'scroll',\n      overflowX: 'hidden'\n    },\n    newNoteInput: {\n      width: '100%',\n      margin: '0px',\n      height: '35px',\n      outline: 'none',\n      border: 'none',\n      paddingLeft: '5px',\n      '&:focus': {\n        outline: '2px solid rgba(81, 203, 238, 1)'\n      }\n    },\n    newNoteSubmitBtn: {\n      width: '100%',\n      backgroundColor: '#28787c',\n      borderRadius: '0px',\n      color: 'white'\n    }\n  });\n  \n  export default styles;","const styles = theme => ({\n    listItem: {\n      cursor: 'pointer'\n    },\n    textSection: {\n      maxWidth: '85%'\n    },  \n    deleteIcon: {\n      position: 'absolute',\n      right: '5px',\n      top: 'calc(50% - 15px)',\n      '&:hover': {\n        color: 'red'\n      }\n    }\n  });\n  \n  export default styles;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeHTMLTags } from '../helpers';\n\n\nclass SidebarItemComponent extends Component{\n\n    render(){\n\n        const {_index, _note, classes, selectedNoteIndex} = this.props;\n\n        return(\n            <div key={_index}>\n                <ListItem className={classes.ListItem}\n                selected={selectedNoteIndex === _index}\n                alignItems='flex-start'>\n                    <div className={classes.textSection}\n                    onClick={() => this.selectNote(_note, _index)}>\n                        <ListItemText \n                        primary={_note.title}\n                        secondary={removeHTMLTags(_note.body.substring(0, 30)) + '...'}></ListItemText> \n                    </div>\n                    <DeleteIcon onClick={()=> this.deleteNote(_note)}\n                    className={classes.deleteIcon}></DeleteIcon>\n                </ListItem>\n            </div>\n        );\n    }\n    selectNote = (n, i) => this.props.selectNote(n, i);\n\n    deleteNote = (note) => {\n        if(window.confirm(`Are you sure you want to delete: ${note.title}`)){\n            this.props.deleteNote(note);\n        }\n    }\n\n}\n\nexport default withStyles(styles)(SidebarItemComponent);","export default function debounce(a,b,c){\n    var d,e;\n    return function(){\n      function h(){\n        d=null;\n        c||(e=a.apply(f,g));\n      }\n      var f=this,g=arguments;\n      return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\n    }\n  }\n  \n  export function removeHTMLTags (str) {\n    return str.replace(/<[^>]*>?/gm, '');\n  };","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebaritem';\n\nclass SideBarComponent extends Component{\n    constructor(){\n        super();\n\n        this.state ={\n            addingNote: false,\n            title: null\n        };\n    }\n\n    render(){\n\n        const {notes, classes, selectedNoteIndex} = this.props;\n\n        if(notes){\n            return(\n                <div className={classes.sidebarContainer}>\n                    <Button\n                    onClick={this.newNoteBtnClick}\n                    className={classes.newNoteBtn}>{this.state.addingNote ? 'Cancel' : 'New Note'}</Button>\n                    {\n                        this.state.addingNote ? \n                        <div>\n                          <input type='text'\n                            className={classes.newNoteInput}\n                            placeholder='Enter note title'\n                            onKeyUp={(e) => this.updateTitle(e.target.value)}>\n                          </input>\n                          <Button \n                            className={classes.newNoteSubmitBtn}\n                            onClick={this.newNote}>Submit Note</Button>\n                        </div> :\n                        null\n                    }\n    \n                    <List>\n                        {\n                            notes.map((_note, _index) => {\n                                return(\n                                    <div key={_index}>\n                                        <SidebarItemComponent\n                                        _note={_note}\n                                        _index={_index}\n                                        selectedNoteIndex={selectedNoteIndex}\n                                        selectNote={this.selectNote}\n                                        deleteNote={this.deleteNote}>\n                                        </SidebarItemComponent>\n                                        <Divider></Divider>\n                                    </div>\n                                )\n                            })\n                        }\n                    </List>\n                </div>\n            );\n        }else{\n            return(\n                <div></div>\n            );\n        }\n    }\n\n    newNoteBtnClick = () => {\n        this.setState({ title: null, addingNote: !this.state.addingNote });\n    }\n\n    updateTitle = (txt) => {\n        this.setState({ title: txt });\n    }\n\n    newNote = () => {\n       this.props.newNote(this.state.title);\n       this.setState({ title: null, addingNote: false});\n    }\n\n    selectNote = (n, i) => this.props.selectNote(n, i);\n    \n    deleteNote = (note) => this.props.deleteNote(note);\n}\n\nexport default withStyles(styles)(SideBarComponent);","const styles = theme => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      height: 'calc(100% - 35px)',\n      position: 'absolute',\n      left: '0',\n      width: '300px',\n      boxShadow: '0px 0px 2px black'\n    },\n    titleInput: {\n      height: '50px',\n      boxSizing: 'border-box',\n      border: 'none',\n      padding: '5px',\n      fontSize: '24px',\n      width: 'calc(100% - 300px)',\n      backgroundColor: '#29487d',\n      color: 'white',\n      paddingLeft: '50px'\n    },\n    editIcon: {\n      position: 'absolute',\n      left: '310px',\n      top: '12px',\n      color: 'white',\n      width: '10',\n      height: '10'\n    },\n    editorContainer: {\n      height: '100%',\n      boxSizing: 'border-box'\n    }\n  });\n  \n  export default styles;","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill';\nimport debounce from '../helpers';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\n\nclass EditorComponent extends Component{\n    constructor(){\n        super();\n\n        this.state = {\n            text: '',\n            title: '',\n            id: ''\n        };\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            text: this.props.selectedNote.body,\n            title: this.props.selectedNote.title,\n            id: this.props.selectedNote.id\n        });\n    }\n    //called \n    componentDidUpdate = () => {\n        if(this.props.selectedNote.id !== this.state.id){\n            this.setState({\n                text: this.props.selectedNote.body,\n                title: this.props.selectedNote.title,\n                id: this.props.selectedNote.id\n            });\n        }\n    }\n\n    render(){\n\n        const { classes } = this.props;\n\n\n        return(\n            <div className={classes.editorContainer}>\n                <BorderColorIcon className={classes.editIcon}></BorderColorIcon>\n                <input className={classes.titleInput}\n                placeholder='Note title ...'\n                value={this.state.title ? this.state.title : ''}\n                onChange={(e) => this.updateTitle(e.target.value)}></input>\n                <ReactQuill \n                value={this.state.text} \n                onChange={this.updateBody}></ReactQuill>\n            </div>\n        );\n    }\n\n    updateBody = async (val) => {\n        await this.setState({ text:val });\n        this.update();\n    };\n\n    updateTitle = async (txt) => {\n        await this.setState({ title: txt });\n        this.update();\n    }\n\n    //Wait for user to stop typing for 1.5 seconds before updating database\n    update = debounce(() => {\n        this.props.noteUpdate(this.state.id, {\n            title: this.state.title,\n            body: this.state.text\n        })\n    }, 1500);\n}\n\nexport default withStyles(styles)(EditorComponent);","import React from 'react';\nimport SidebarComponent from './sidebar/sidebar';\nimport EditorComponent from './editor/editor';\nimport './App.css';\n\nconst firebase = require('firebase');\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes: null\n    };\n  }\n\n  render() {\n    return(\n      <div className=\"app-container\">\n        <SidebarComponent \n          selectedNoteIndex={this.state.selectedNoteIndex}\n          notes={this.state.notes}\n          deleteNote={this.deleteNote}\n          selectNote={this.selectNote}\n          newNote={this.newNote}></SidebarComponent>\n        {\n          this.state.selectedNote ?\n          <EditorComponent selectedNote={this.state.selectedNote}\n          selectedNoteIndex={this.state.selectedNoteIndex}\n          notes={this.state.notes}\n          noteUpdate={this.noteUpdate}></EditorComponent> :\n          null\n        }\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    firebase\n      .firestore()\n      .collection('notes')\n      .onSnapshot(serverUpdate => {\n        const notes = serverUpdate.docs.map(_doc => {\n          const data = _doc.data();\n          data['id'] = _doc.id;\n          return data;\n        });\n        console.log(notes);\n        this.setState({ notes: notes });\n      });\n  }\n\n  selectNote = (note, index) => this.setState({ selectedNoteIndex: index, selectedNote: note });\n  noteUpdate = (id, noteObj) => {\n    firebase\n      .firestore()\n      .collection('notes')\n      .doc(id)\n      .update({\n        title: noteObj.title,\n        body: noteObj.body,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n  }\n  newNote = async (title) => {\n    const note = {\n      title: title,\n      body: ''\n    };\n    const newFromDB = await firebase\n      .firestore()\n      .collection('notes')\n      .add({\n        title: note.title,\n        body: note.body,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    const newID = newFromDB.id;\n    await this.setState({ notes: [...this.state.notes, note] });\n    const newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(_note => _note.id === newID)[0]);\n    this.setState({ selectedNote: this.state.notes[newNoteIndex], selectedNoteIndex: newNoteIndex });\n  }\n  deleteNote = async (note) => {\n    const noteIndex = this.state.notes.indexOf(note);\n    await this.setState({ notes: this.state.notes.filter(_note => _note !== note) });\n    if(this.state.selectedNoteIndex === noteIndex) {\n      this.setState({ selectedNoteIndex: null, selectedNote: null });\n    } else {\n      this.state.notes.length > 1 ?\n      this.selectNote(this.state.notes[this.state.selectedNoteIndex - 1], this.state.selectedNoteIndex - 1) :\n      this.setState({ selectedNoteIndex: null, selectedNote: null });\n    }\n\n    firebase\n      .firestore()\n      .collection('notes')\n      .doc(note.id)\n      .delete();\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst firebase = require('firebase');\nrequire('firebase/firestore');\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyD7gw_FokBcTnqox1-YEWg1YIN2pDonHAc\",\n    authDomain: \"evernote-clone-dd253.firebaseapp.com\",\n    databaseURL: \"https://evernote-clone-dd253.firebaseio.com\",\n    projectId: \"evernote-clone-dd253\",\n    storageBucket: \"evernote-clone-dd253.appspot.com\",\n    messagingSenderId: \"795740397897\",\n    appId: \"1:795740397897:web:cbebfc2f6bd8ff2993ba98\",\n    measurementId: \"G-ZB8B7ZC0CE\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n\nReactDOM.render(<App />, document.getElementById('evernote-container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}